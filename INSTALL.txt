# Configure o script, alterando as variáveis no arquivo 'usr/local/bin/ocr':
	#    @BASE_DIRS:	Lista de diretórios base para a busca de arquivos --> cada diretório base irá ter sua própria instância do script 
	#    @SUB_DIRS:		Subdiretórios de entrada, saída, backup do arquivos originais, temporário e de arquivos com erro
	#    $MAX_FILES:	Número máximo de arquivos a serem processados simultaneamente por diretório de entrada (default: 2)
	#    $MAX_PGS:		Número máximo de páginas que podem ser processadas simultanemante por arquivo de entrada (default: no. de CPUs)
	# Essas variáveis controlam o número máximo de instâncias de processos simultâneas = Num. de diretorios X MAX_FILES X MAX_PGS.
	# Recomenda-se que o equipamento tenha em torno de 1,5 GB de RAM para cada core de CPU de forma a evitar swap. Se isso não for possível, pode ser reduzido o número de processos ou arquivos simultâneos.

# Para operação multi instância, basta instalar quantos servidores forem necessários e eles podem ter acesso aos mesmos diretórios de entrada que podem ser compatilhamentos SAMBA/CIFS/Windows ou NFS.


# Configuração e instalação do OCR server:

# Compilando os pré-requisitos: máquina de COMPILAÇÃO APENAS -- (RedHat) --> os requisitos de runtime estão abaixo e são menores
	yum -y install autoconf make gcc-java gcc gcc-c++ subversion pkg-config automake libtool yasm cmake git libgcj
	yum -y install libtiff-devel libpng-devel openjpeg-devel libjpeg-turbo-devel giflib-devel libwebp-devel zlib-devel libicu-devel pango-devel cairo-devel fontconfig-devel gettext-devel

# Ubuntu
	apt-get install build-essential cmake libtool yasm pkg-config subversion git libgcj14 
	apt-get install libtiff-dev libpng-dev libopenjpeg-dev libjpeg8-dev libjpeg-turbo8-dev libjpeg-dev libgif-dev zlib1g-dev libicu-dev libpango1.0-dev libcairo2-dev libfontconfig1-dev libgettextpo-dev

	cd /usr/local/src

	for i in \
		https://github.com/tesseract-ocr/langdata.git \
		https://github.com/DanBloomberg/leptonica.git \
		https://github.com/libav/libav.git  \
		https://github.com/tesseract-ocr/tessdata.git \
		https://github.com/tesseract-ocr/tesseract.git \
		git://git.freedesktop.org/git/poppler/poppler.git \
		git://git.freedesktop.org/git/poppler/test.git \
		https://github.com/Flameeyes/unpaper.git \
		https://github.com/ocaml/ocaml.git \
		https://gitlab.camlcity.org/gerd/lib-findlib.git \
		https://github.com/johnwhitington/camlpdf.git \
		https://github.com/johnwhitington/cpdf-source.git \
	; do git clone $i; done

	wget http://www.itzgeek.com/msttcore-fonts-2.0-3.noarch.rpm
	rpm -Uvh msttcore-fonts-2.0-3.noarch.rpm
	rm -f msttcore-fonts-2.0-3.noarch.rpm

	wget https://www.pdflabs.com/tools/pdftk-the-pdf-toolkit/pdftk-2.02-src.zip
	unzip pdftk-2.02-src.zip
	rm -f pdftk-2.02-src.zip

# Leptonica
	cd leptonica && ./autobuild && ./configure && make -j 8 all install && cd ..

# Tesseract
	cd tesseract && ./autogen.sh && ./configure && make -j 8 all install && cd ..
	cp -avR tessdata/* /usr/local/share/tessdata/

# libav
	cd libav && ./configure --enable-sram && make -j8 all install && cd ..

# cpdf
	cd ocaml && ./configure && make world.opt && make install && cd ..
	mkdir -p /usr/local/man/man5
	cd lib-findlib  && ./configure && make all && make install && cd ..
	cd camlpdf && sed -i.bak s/\(uint32\)/\(uint32_t\)/g flatestubs.c && make && make install && cd ..
	cd cpdf-source && make all && make install && cp cpdf /usr/local/bin && cd ..

# pdftk
	cd pdftk-2.02-dist/pdftk && make -f Makefile.Redhat all install && cd ../..

# poppler
	cd poppler && ./autogen.sh && LIBOPENJPEG_LIBS=-l/usr/local/lib/libopenjp2.so LIBOPENJPEG_CFLAGS=-I/usr/local/include ./configure --enable-libopenjpeg=openjpeg2 && make  all install && cd ..

# Criação do usuário
	adduser ocr

# Copie os arquivos ocr ocr-init* para o /home/ocr e, conforme o sistema operacional
	cp /home/ocr/ocr /usr/local/bin
	cp /home/ocr/ocr-init-rh /etc/init.d/ocr (OU) 
	cp /home/ocr/ocr-init-Ubuntu /etc/init/ocr

# Auto start (RedHat)
	chkconfig --add ocr
	chkconfig --level 2345 ocr on

# Auto start (Ubuntu)
	update-rd.d ocr defaults

# Create pkg
	cd /home/ocr
	tar cvozf pkg-ocr.tgz /usr/local/bin /usr/local/lib* /usr/local/man/ /usr/local/sbin/ /usr/local/share/ /usr/local/etc /usr/local/include/ /home/ocr/ocr* /etc/init.d/ocr /etc/rc*.d/*ocr
	su

# Copie o pacote para os outros servidores e extraia com:
	cd /
	tar xovzf pkg-ocr.tgz

# Instalando pré-requisitos RUNTIME
	yum -y install perl-File-Find-Rule-Perl perl-File-Touch libtiff libpng openjpeg-libs libjpeg-turbo giflib zlib libicu pango cairo fontconfig ImageMagick gettext libwebp
	yum -y install libtiff libpng openjpeg libjpeg-turbo giflib libwebp zlib libicu pango cairo fontconfig gettext 

# Ubuntu
	apt-get install  libfile-find-rule-perl libfile-find-rule-perl-perl libtiff5 libpng12-0 libopenjpeg2 libjpeg-turbo8 libgif4 zlib1g libicu52 libpango1.0-0 libcairo2 fontconfig imagemagick gettext libwebp5 # libgcj14 
	apt-get install libtiff5 libpng12-0 libopenjpeg2 libjpeg8 libjpeg-turbo8 libjpeg8 zlib1g libpango1.0-0 libcairo2 libfontconfig1 libgettextpo0

# Inicie o serviço com
	service ocr start